%script{:src => "/scripts/masonry.pkgd.min.js", :type => "text/javascript"}
%script{:src => "/scripts/isotope.pkgd.min.js", :type => "text/javascript"}
%script{:src => "/scripts/isotope.init.js", :type => "text/javascript"}

.container
  .row.module.parallax.parallax-profiles
    .col-md-12
      %h1.wow.fadeInUp{"data-wow-duration" => "1s"} Redvillage TV
    .row
      #player.col-sm-9
        :javascript
          // 2. This code loads the IFrame Player API code asynchronously.
          var tag = document.createElement('script');

          tag.src = "https://www.youtube.com/iframe_api";
          var firstScriptTag = document.getElementsByTagName('script')[0];
          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

          // 3. This function creates an <iframe> (and YouTube player)
          //    after the API code downloads.
          var player;
          function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
              height: '520',
              width: '100%',
              videoId: 'foQusxK9iT8',
              events: {
                'onReady': onPlayerReady,
              }
            });
          }

          // 4. The API will call this function when the video player is ready.
          function onPlayerReady(event) {
            <!-- event.target.getPlayList(); -->
          }

          // 5. The API calls this function when the player's state changes.
          //    The function indicates that when playing a video (state=1),
          //    the player should play for six seconds and then stop.
          var done = false;
          function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING && !done) {
              setTimeout(stopVideo, 6000);
              done = true;
            }
          }
          function stopVideo() {
            player.stopVideo();
          }
          function playVideo(videoId) {          
            player.loadVideoById(videoId, 0, "medium");
          }
      .col-md-3
        #video_carousel.flexslider
          %ul.slides
            -for video in @videos
              %li
                .vid-item
                  .thumb
                    %a{:href => "#{video.link}", :onclick => "playVideo('#{video.uid}')"}
                      %img{:src => "https://img.youtube.com/vi/#{video.uid}/mqdefault.jpg"}
                      .desc
                        #{video.title}
:javascript
  $(document).ready(function(){
    $('#video_carousel').flexslider({
      animation: "slide",
      direction: "vertical",
      controlNav: false,
      animationLoop: false,
      slideshow: false,
      itemWidth: 380,
      itemMargin: 1,
      asNavFor: '#slider'
    });
 
  })


