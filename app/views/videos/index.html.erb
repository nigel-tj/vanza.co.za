<script src='/scripts/masonry.pkgd.min.js' type='text/javascript'></script>
<script src='/scripts/isotope.pkgd.min.js' type='text/javascript'></script>
<script src='/scripts/isotope.init.js' type='text/javascript'></script>

<section class="intro">
  <div class="intro-body">
    <div class="container">
      <div class="row">
        <div class="col-md-8 col-md-offset-2">
          <h1 class="brand-heading">VANZA VIDEO PLAYLIIST</h1>
          <p class="intro-text">See the african heart beat</p>
          <div class="page-scroll">
            <a href="#about" class="btn btn-circle">
              <i class="fa fa-angle-double-down animated"></i>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>


<div class='container'>
  <div class='row module parallax parallax-profiles'>
    <div class='col-md-12'>
      <h1 class='wow fadeInUp' data-wow-duration='1s'>Vanza Entertainment TV</h1>
    </div>
    <div class='row'>
      <div class='col-sm-9' id='player'>
        <script>
          // 2. This code loads the IFrame Player API code asynchronously.
          var tag = document.createElement('script');
          
          tag.src = "https://www.youtube.com/iframe_api";
          var firstScriptTag = document.getElementsByTagName('script')[0];
          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
          
          // 3. This function creates an <iframe> (and YouTube player)
          //    after the API code downloads.
          var player;
          function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
              height: '520',
              width: '100%',
              videoId: 'foQusxK9iT8',
              events: {
                'onReady': onPlayerReady,
              }
            });
          }
          
          // 4. The API will call this function when the video player is ready.
          function onPlayerReady(event) {
            <!-- event.target.getPlayList(); -->
          }
          
          // 5. The API calls this function when the player's state changes.
          //    The function indicates that when playing a video (state=1),
          //    the player should play for six seconds and then stop.
          var done = false;
          function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING && !done) {
              setTimeout(stopVideo, 6000);
              done = true;
            }
          }
          function stopVideo() {
            player.stopVideo();
          }
          function playVideo(videoId) {          
            player.loadVideoById(videoId, 0, "medium");
          }
        </script>
      </div>
      <div class='col-md-3'>
        <div class='flexslider' id='video_carousel'>
          <ul class='slides'>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  $(document).ready(function(){
    $('#video_carousel').flexslider({
      animation: "slide",
      direction: "vertical",
      controlNav: false,
      animationLoop: false,
      slideshow: false,
      itemWidth: 380,
      itemMargin: 1,
      asNavFor: '#slider'
    });
  
  })
</script>
